@model BlowOut.Models.Client

@{
    ViewBag.Title = "Create";
    Layout = null;
}

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>BlowOut Musical Instrument Rentals</title>
    <!-- Bootstrap core CSS -->
    <link href="~/Content/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <!-- Custom fonts for this template -->
    <link href="~/Content/vendor/fontawesome-free/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Varela+Round" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <!-- Custom styles for this template -->
    <link href="~/Content/css/grayscale.min.css" rel="stylesheet">
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/style.css" rel="stylesheet" />    
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light fixed-top" id="mainNav">
        <div class="container">
            <a class="navbar-brand js-scroll-trigger" href=@Url.Action("Index", "Home")>BlowOut Musical Instrument Rentals</a>
            <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                Menu
                <i class="fas fa-bars"></i>
            </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                        <a class="nav-link js-scroll-trigger" href=@Url.Action("Index", "Rentals")>Rentals</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link js-scroll-trigger" href=@Url.Action("About", "Home")>About</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link js-scroll-trigger" href=@Url.Action("Contact", "Home")>Contact</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <section class="rental-style" style="background-image: url(../Content/violindark.jpg); background-size: contain; background-repeat: repeat;">
        <div class="rental-background" style="padding-top: 10%; padding-bottom: 5%;">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal" style="padding-left: 30px;">
                    <h4 style="margin-left: 20px;">Create Customer Profile</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group form-fifty">
                        @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label form-title" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name" } })
                            @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-fifty">
                        @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label form-title" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name" } })
                            @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-fifty">
                        @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label form-title" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", placeholder = "Street Address" } })
                            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-fifty">
                        @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label form-title" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control", placeholder = "City" } })
                            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-fifty">
                        @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label form-title" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control", placeholder = "State" } })
                            @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-fifty">
                        @Html.LabelFor(model => model.zip, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.zip, new { htmlAttributes = new { @class = "form-control", placeholder = "Zip Code" } })
                            @Html.ValidationMessageFor(model => model.zip, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-fifty">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label form-title" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email Address" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-fifty">
                        @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label form-title" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", placeholder = "Phone Number" } })
                            @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group form-fifty">
                        <div class="col-md-offset-2 col-md-10" style="padding-top: 20px; padding-bottom: 40px;">
                            <input type="submit" value="Create" class="btn btn-primary js-scroll-trigger" />
                        </div>
                    </div>
                </div>
            }
        </div>
        
    </section>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
    <script src="~/Content/vendor/jquery/jquery.min.js"></script>
    <script src="~/Content/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- Plugin JavaScript -->
    <script src="~/Content/vendor/jquery-easing/jquery.easing.min.js"></script>
    <!-- Custom scripts for this template -->
    <script src="~/Content/js/grayscale.min.js"></script>
</body>
